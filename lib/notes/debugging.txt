################################################################################
1-22-17: #######################################################################
• WHAT, WHEN: Clicking Comment delete link (on /comments/_comment):

  =link_to 'Delete', comment, method: :delete, ..

: returns:

  >  NoMethodError at /posts/5
  >  undefined method `comment_path' for #<#<Class:0x007ffdd9198bb8>:0x007ffddd5ebec8>
  >  Did you mean?  font_path

• WHY:
: comment is nested (not shallow at this point, although it "should be")

• FIX:

  : A) Preferred: Shallow nested comments
  : B) ... until then:

      =link_to 'Delete', [@post, comment], method: :delete, ..
################################################################################




################################################################################
1-22-17: #######################################################################
################################################################################
• WHAT: a new Post Comment would save, no error message (automatically
  generated by simple_form as promised on the home page)

• WHEN: first test run of the form and comments_controller::create action

• WHY:
: placing `byebug` in:

    def create
      post = Post.find params[:post_id]
      post.comments.create( params[:comment].permit( :content ) )
      byebug
      redirect_to post, notice:'Comment posted.'
    end

: and stepping in server terminal revealed:

    (byebug) post
    #<Post id: 3, title: "GP inspiration", link: "#", description: "let's eee how the authentication links show", created_at: "2017-01-22 00:30:44", updated_at: "2017-01-22 17:29:49", user_id: 2, image_file_name: "images_copy.jpg", image_content_type: "image/jpeg", image_file_size: 6580, image_updated_at: "2017-01-22 17:29:49">
    (byebug) post.comments
      Comment Load (123.4ms)  SELECT "comments".* FROM "comments" WHERE "comments"."post_id" = ?  [["post_id", 3]]
    #<ActiveRecord::Associations::CollectionProxy [#<Comment id: nil, content: "and again", post_id: 3, user_id: nil, created_at: nil, updated_at: nil>]>
    (byebug) post.comments.last
    #<Comment id: nil, content: "and again", post_id: 3, user_id: nil, created_at: nil, updated_at: nil>
    (byebug) post.comments.last.valid?
    false
    (byebug) post.comments.last.errors.size
    1
    (byebug) post.comments.last.errors.full_messages
    ["User must exist"]
    (byebug)

: ... a missing association, User.

• FIX:

    def create
      post = Post.find params[:post_id]
      post.comments.create( params[:comment].permit( :content ).merge( user: current_user ) )
      redirect_to post, notice:'Comment posted.'
    end
################################################################################
• gem 'paperclip'
: WHAT, WHEN: Image missing on the show page after implementing paperclip

: WHY: consulting server's friendly messages reveals:

    > Unpermitted parameter: image

: remember: adding input to a form goes with a need to permit the key in params!

: FIX: post_controller.rb:

    params.require( :post ).permit( ..., :image )
################################################################################
